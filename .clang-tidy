# See SUPPRESSED_CHECKS in utils/check_clang_tidy_results.py
# Also disable all aliases, because they only result in duplication of work,
# except for clang-analyzer-* aliases, which behave strange, so we treat them
# as normal checks.
#
# Alias list must be updated when clang-tidy version is bumped. Current list
# was taken from:
# https://releases.llvm.org/18.1.0/tools/clang/tools/extra/docs/clang-tidy/checks/list.html
#
# TODO(tothxa): can be converted to "Checks: |" when lowest supported clang
#               version reaches 15
Checks: >-
  *,
  -abseil*,
  -altera*,
  -android*,
  -boost*,
  -*fuchsia*,
  -linuxkernel*,
  -mpi-*,
  -objc*,
  -openmp*,
  -*webkit*,
  -zircon*,
  -clang-analyzer-alpha*,
  -COMMENT---cannot-clean-up-yet---,
  -llvm-header-guard,
  -cert-dcl50-cpp,
  -cppcoreguidelines-pro-type-vararg,
  -COMMENT---probably-not-for-us---,
  -bugprone-reserved-identifier,
  -clang-analyzer-optin.core.EnumCastOutOfRange,
  -clang-analyzer-optin.mpi.MPI-Checker,
  -cppcoreguidelines-avoid-const-or-ref-data-members,
  -cppcoreguidelines-avoid-do-while,
  -cppcoreguidelines-avoid-goto,
  -cppcoreguidelines-no-malloc,
  -cppcoreguidelines-owning-memory,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-union-access,
  -google-default-arguments,
  -hicpp-avoid-goto,
  -llvmlibc-callee-namespace,
  -llvmlibc-implementation-in-namespace,
  -llvmlibc-inline-function-decl,
  -llvmlibc-restrict-system-libc-headers,
  -misc-non-private-member-variables-in-classes,
  -misc-no-recursion,
  -misc-use-anonymous-namespace,
  -modernize-avoid-c-arrays,
  -modernize-raw-string-literal,
  -modernize-replace-disallow-copy-and-assign-macro,
  -modernize-return-braced-init-list,
  -modernize-use-auto,
  -modernize-use-trailing-return-type,
  -performance-avoid-endl,
  -performance-no-int-to-ptr,
  -readability-avoid-return-with-void-value,
  -readability-avoid-unconditional-preprocessor-if,
  -readability-identifier-length,
  -readability-math-missing-parentheses,
  -readability-redundant-inline-specifier,
  -readability-uppercase-literal-suffix,
  -readability-use-std-min-max,
  -COMMENT---to-be-cleaned-up---,
  -bugprone-easily-swappable-parameters,
  -bugprone-empty-catch,
  -bugprone-exception-escape,
  -bugprone-macro-parentheses,
  -bugprone-multi-level-implicit-pointer-conversion,
  -bugprone-narrowing-conversions,
  -bugprone-not-null-terminated-result,
  -bugprone-signed-char-misuse,
  -bugprone-too-small-loop-variable,
  -bugprone-unused-return-value,
  -cert-err33-c,
  -cert-err58-cpp,
  -cert-msc51-cpp,
  -clang-analyzer-core.CallAndMessage,
  -clang-analyzer-core.NonNullParamChecker,
  -clang-analyzer-cplusplus.NewDelete,
  -clang-analyzer-cplusplus.NewDeleteLeaks,
  -clang-analyzer-optin.cplusplus.UninitializedObject,
  -clang-analyzer-optin.cplusplus.VirtualCall,
  -clang-diagnostic-documentation-unknown-command,
  -concurrency-mt-unsafe,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-init-variables,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-narrowing-conversions,
  -cppcoreguidelines-prefer-member-initializer,
  -cppcoreguidelines-pro-type-member-init,
  -cppcoreguidelines-slicing,
  -cppcoreguidelines-special-member-functions,
  -google-readability-casting,
  -google-runtime-references,
  -hicpp-multiway-paths-covered,
  -hicpp-signed-bitwise,
  -misc-confusable-identifiers,
  -misc-const-correctness,
  -misc-include-cleaner,
  -misc-header-include-cycle,
  -misc-macro-parentheses,
  -misc-use-internal-linkage,
  -modernize-make-unique,
  -modernize-pass-by-value,
  -modernize-use-default-member-init,
  -performance-enum-size,
  -performance-unnecessary-value-param,
  -readability-avoid-nested-conditional-operator,
  -readability-const-return-type,
  -readability-convert-member-functions-to-static,
  -readability-enum-initial-value,
  -readability-function-cognitive-complexity,
  -readability-function-size,
  -readability-magic-numbers,
  -readability-named-parameter,
  -readability-redundant-casting,
  -readability-redundant-member-init,
  -readability-static-accessed-through-instance,
  -readability-suspicious-call-argument,
  -COMMENT---disable-aliases---,
  -bugprone-non-zero-enum-to-bool-conversion,
  -cert-con36-c,
  -cert-con54-cpp,
  -cert-dcl03-c,
  -cert-dcl16-c,
  -cert-dcl37-c,
  -cert-dcl51-cpp,
  -cert-dcl54-cpp,
  -cert-dcl59-cpp,
  -cert-err09-cpp,
  -cert-err61-cpp,
  -cert-exp42-c,
  -cert-fio38-c,
  -cert-flp37-c,
  -cert-int09-c,
  -cert-msc24-c,
  -cert-msc30-c,
  -cert-msc32-c,
  -cert-msc33-c,
  -cert-msc54-cpp,
  -cert-oop11-cpp,
  -cert-oop54-cpp,
  -cert-pos44-c,
  -cert-pos47-c,
  -cert-sig30-c,
  -cert-str34-c,
  -clang-analyzer-apiModeling.Errno,
  -clang-analyzer-apiModeling.StdCLibraryFunctions,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-c-copy-assignment-signature,
  -cppcoreguidelines-explicit-virtual-functions,
  -cppcoreguidelines-macro-to-enum,
  -cppcoreguidelines-noexcept-destructor,
  -cppcoreguidelines-noexcept-move-operations,
  -cppcoreguidelines-noexcept-swap,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-use-default-member-init,
  -google-readability-braces-around-statements,
  -google-readability-function-size,
  -google-readability-namespace-comments,
  -hicpp-avoid-c-arrays,
  -hicpp-braces-around-statements,
  -hicpp-deprecated-headers,
  -hicpp-explicit-conversions,
  -hicpp-function-size,
  -hicpp-ignored-remove-result,
  -hicpp-invalid-access-moved,
  -hicpp-member-init,
  -hicpp-move-const-arg,
  -hicpp-named-parameter,
  -hicpp-new-delete-operators,
  -hicpp-no-array-decay,
  -hicpp-no-malloc,
  -hicpp-noexcept-move,
  -hicpp-special-member-functions,
  -hicpp-static-assert,
  -hicpp-undelegated-constructor,
  -hicpp-uppercase-literal-suffix,
  -hicpp-use-auto,
  -hicpp-use-emplace,
  -hicpp-use-equals-default,
  -hicpp-use-equals-delete,
  -hicpp-use-noexcept,
  -hicpp-use-nullptr,
  -hicpp-use-override,
  -hicpp-vararg,
  -llvm-else-after-return,
  -llvm-qualified-auto
WarningsAsErrors: ''
HeaderFilterRegex:
  # This is to exclude 'src/third_party'. Needs to be updated, if any new
  # directory is added. It's an old outstanding feature request for clang-tidy
  # to make this easier...
  # It's better to list them, because the sources may be in e.g.
  #   /home/user/src/widelands/
  # TODO(tothxa): figure out which multiline format works...
  'src/((ai|base|chat|commands|economy|editor|game_io|graphic|io|logic|map_io|network|notifications|scripting|sound|ui_basic|ui_fsmenu|website|wui)/|[a-z_]+\.h)'
FormatStyle:     none
