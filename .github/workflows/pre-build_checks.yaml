name: Pre-Build Documentation and Sanity Checks
on:
  workflow_call:
    inputs:
      clang_tidy:
        required: true
        type: string
      codecheck:
        required: true
        type: string

jobs:
  clang_tidy:
    if: ${{ inputs.clang_tidy != 'false' }}
    uses: ./.github/workflows/build_clang_tidy.yaml

  codecheck:
    if: ${{ inputs.codecheck != 'false' }}
    uses: ./.github/workflows/build_codecheck.yaml

  # This job runs multiple smaller checks where having several jobs would be overkill.
  misc_sanity_checks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Validate JSON files
      run: |
        python3 utils/validate_json.py data/txts/
        python3 utils/update_authors.py
    - name: Check for missing copyright headers
      run: |
        pushd src
        ../utils/find_missing_copyright_headers.sh
        popd
    - name: Check for superfluous includes and forward declarations
      run: |
        pushd src
        ../utils/find_unused_includes.py
        popd
    - name: Check regression test coverage of starting and win conditions
      run: |
        python3 utils/test/check_template_test_coverage.py

  documentation:
    # TODO(tothxa): ubuntu-22.04 has ancient version of sphinx, revert when -latest becomes -24.04
    # runs-on: ubuntu-latest
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Install sphinx and graphviz
      run: |
        sudo apt-get update
        sudo apt-get install python3-sphinx python3-sphinxcontrib.serializinghtml graphviz
    - name: Generate documentation
      run: |
        cd doc/sphinx
        mkdir source/_static
        ./extract_rst.py
        # Test building for the homepage
        sphinx-build -W -b json -d build/doctrees source build/json
        # This is suitable for user testing
        ./make.py html -graphs
        # Create a downloadable workflow artifact for testing
        mv build widelands-doc-${{ github.sha }}
        zip -r ${{ github.workspace }}/Widelands-${{ github.sha }}-Developer-Documentation.zip widelands-doc-${{ github.sha }}
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Widelands Developer Documentation
        path: ${{ github.workspace }}/Widelands-${{ github.sha }}-Developer-Documentation.zip

  lua_style:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Prepare documentation examples for parsing
      run: |
        pushd doc/sphinx
        ./extract_rst.py
        popd
    - name: Run Lua style checker
      run: ./utils/lua_style_checker.py

